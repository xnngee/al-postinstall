# Network install repository
d-i mirror/protocol string http
d-i mirror/http/hostname string dl.astralinux.ru
d-i mirror/http/directory string /astra/stable/1.7_x86-64/repository-main

# Language settings
d-i mirror/country string manual
d-i debian-installer/locale string ru_RU
d-i debian-installer/locale select ru_RU.UTF-8
d-i debian-installer/language string ru
d-i debian-installer/country string RU
d-i debian-installer/keymap string ru

# Keyboard settings
d-i console-tools/archs select at
d-i console-keymaps-at/keymap select ru
d-i console-setup/toggle string Alt+Shift
d-i console-setup/layoutcode string ru
d-i keyboard-configuration/toggle select Alt+Shift
d-i keyboard-configuration/layoutcode string ru
d-i keyboard-configuration/xkb-keymap select ru
d-i languagechooser/language-name-fb select Russian
d-i countrychooser/country-name select Russia

# Setup networking
d-i netcfg/choose_interface select auto
d-i netcfg/get_domain string aviakat.local
d-i netcfg/dhcp_failed note
d-i netcfg/dhcp_options select Do not configure the network at this time

#d-i netcfg/get_ipaddress string 192.168.1.10
#d-i netcfg/get_netmask string 255.255.0.0
#d-i netcfg/get_gateway string 192.168.1.1
#d-i netcfg/get_nameservers string 192.168.1.1
#d-i netcfg/confirm_static boolean true

# Select the repositories to install
d-i apt-setup/non-free boolean true
d-i apt-setup/contrib boolean true
d-i apt-setup/services-select none

# Setup time and time synchronization
d-i clock-setup/utc boolean true
d-i time/zone string Europe/Moscow

# Determines whether or not to use NTP for setting the time during installation
d-i clock-setup/ntp boolean true

# NTP sever used. The default value is specified here. For example, the server VNIIFTRI is specified.
d-i clock-setup/ntp-server string ntp1.vniiftri.ru

# Partitioning disk
d-i partman-auto/disk string /dev/nvme0n1
d-i partman-auto/method string regular
d-i partman-auto/purge-lvm-from-device boolean true

d-i partman-auto/expert_recipe string myroot :: \
     538 1075 1075 fat32 \
         $primary{ } $bootable{ } \
         method{ efi } format{ } .\
     8192 16384 16384 linux-swap \
         method{ swap } format{ } .\
     32768 1000000000 -1 ext4 \
         method{ format } format{ } \
         use_filesystem{ } filesystem{ ext4 } mountpoint{ / } .
d-i partman-auto/choose_recipe select myroot

d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true

d-i partman-target/mount_failed boolean true
d-i partman-partitioning/unknown_label boolean true
d-i partman-auto/purge_lvm_from_device string  true
d-i partman-lvm/vgdelete_confirm boolean true
d-i partman/confirm_write_new_label string  true
d-i partman-lvm/confirm boolean true
d-i partman/confirm_nooverwrite boolean true


d-i base-installer/kernel/image string linux-image-generic

d-i passwd/make-user boolean true

# User account and password
d-i passwd/user-fullname string adminl
d-i passwd/username string adminl
d-i passwd/user-password password 12345678
d-i passwd/user-password-again password 12345678

# d-i passwd/user-default-groups string dialout cdrom floppy audio dip video plugdev users netdev lpadmin scanner astra-admin astra-console

d-i passwd/root-login boolean false

d-i debian-installer/allow_unauthenticated string true

# Select the software to install
tasksel tasksel/first multiselect Base packages, Fly desktop, Base packages, Ufw firewall, SSH server
tasksel tasksel/astra-feat-setup multiselect

# Select the level of OS security
d-i astra-additional-setup/os-check select Base security level Orel

# Select OS parameters
d-i astra-additional-setup/additional-settings-orel multiselect Disable ptrace capability

# Agree to the Astra license
astra-license astra-license/license boolean true

popularity-contest popularity-contest/participate boolean false

d-i grub-installer/only_debian boolean true

d-i grub-installer/with_other_os boolean true

# Boot loader password
d-i grub-installer/password password 12345678
d-i grub-installer/password-again password 12345678
grub-installer grub-installer/password-mismatch error

# Do not show the installation completion message.
d-i finish-install/reboot_in_progress note
d-i finish-install/exit/poweroff boolean true

# d-i pkgsel/include string wget
d-i preseed/late_command string \
    echo "  :: Purging 'ntp'"; \
        in-target apt purge -y ntp; \
    echo "  :: Enabling systemd-timesyncd"; \
        in-target systemctl enable systemd-timesyncd.service; \
    echo "  :: Removing old network connections"; \
        in-target rm -f /etc/NetworkManager/system-connections/*; \
    echo "  :: Setting keyboard options"; \
        in-target sed -i 's/^XKBOPTIONS=.*/XKBOPTIONS=\"grp:alt_shift_toggle,grp_led,numpad:microsoft\"/' /etc/default/keyboard; \
    echo "  :: Downloading postinstall script"; \
        in-target bash -c "mkdir -p /usr/local/bin/"; \
        in-target wget https://raw.githubusercontent.com/xnngee/al-postinstall/refs/heads/main/postinstall.sh -O /usr/local/bin/postinstall.sh; \
        in-target wget https://raw.githubusercontent.com/xnngee/al-postinstall/refs/heads/main/postinstall_user.sh -O /usr/local/bin/postinstall_user.sh; \
    echo "  :: Setting postinstall script as executable"; \
        in-target bash -c "chmod +x /usr/local/bin/postinstall.sh"; \
        in-target bash -c "chmod +x /usr/local/bin/postinstall_user.sh"; \
    echo "  :: Creating postinstall global desktop entry"; \
        in-target bash -c "mkdir -p /etc/xdg/autostart/"; \
        in-target bash -c "echo '[Desktop Entry]' > /etc/xdg/autostart/postinstall.desktop"; \
        in-target bash -c "echo 'Name=PostInstall' >> /etc/xdg/autostart/postinstall.desktop"; \
        in-target bash -c "echo 'Type=Application' >> /etc/xdg/autostart/postinstall.desktop"; \
        in-target bash -c "echo 'Exec=bash -c '\\''if [ -f \"\$HOME/.config/.postinstall_done\" ]; then bash /usr/local/bin/postinstall_user.sh; exit 0; fi; xterm -e /usr/local/bin/postinstall.sh'\\''' >> /etc/xdg/autostart/postinstall.desktop"; \
        in-target bash -c "echo 'Icon=utilities-terminal' >> /etc/xdg/autostart/postinstall.desktop"; \
        in-target bash -c "echo 'Categories=System;' >> /etc/xdg/autostart/postinstall.desktop"; \
        in-target bash -c "chmod +x /etc/xdg/autostart/postinstall.desktop"; \
    echo "  :: Creating postinstall_download script"; \
        in-target bash -c "echo '#!/bin/bash' > /usr/local/bin/postinstall_download.sh;"; \
        in-target bash -c "echo 'sudo wget https://raw.githubusercontent.com/xnngee/al-postinstall/refs/heads/main/postinstall.sh -O /usr/local/bin/postinstall.sh' >> /usr/local/bin/postinstall_download.sh"; \
        in-target bash -c "echo 'sudo wget https://raw.githubusercontent.com/xnngee/al-postinstall/refs/heads/main/postinstall_user.sh -O /usr/local/bin/postinstall_user.sh' >> /usr/local/bin/postinstall_download.sh"; \
        in-target bash -c "echo 'chmod +x /usr/local/bin/postinstall.sh' >> /usr/local/bin/postinstall_download.sh"; \
        in-target bash -c "echo 'chmod +x /usr/local/bin/postinstall_user.sh' >> /usr/local/bin/postinstall_download.sh"; \
        in-target bash -c "chmod +x /usr/local/bin/postinstall_download.sh"; \
    echo "  :: Creating connect_domain script"; \
        in-target bash -c "echo '#!/bin/bash' > /usr/local/bin/connect_domain.sh;"; \
        in-target bash -c "echo 'cat > /etc/resolv.conf << EOF' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "echo 'domain aviakat.ru' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "echo 'nameserver 192.168.1.1' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "echo 'nameserver 192.168.2.2' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "echo 'EOF' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "echo 'sudo astra-ad-sssd-client -d aviakat.ru -u admin -p paswd123 && sudo rm -rf /usr/local/bin/connect_domain.sh' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "echo 'while true; do' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "echo '  read -p \"Restart? \" query' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "echo '  case $query in' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "echo '    [Yy]*) sudo reboot;;' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "echo '    [Nn]*) exit 0;;' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "echo '        *) echo \"Please answer yes or no (y, n).\";;' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "echo '  esac' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "echo 'done' >> /usr/local/bin/connect_domain.sh"; \
        in-target bash -c "chmod +x /usr/local/bin/connect_domain.sh"; \
    echo ":: Done.";
